#define F_CPU 8000000UL
#include <avr/interrupt.h>
#include <avr/io.h>
#include <util/delay.h>
unsigned int a[10]={0XC0,0xF9,0XA4,0XB0,0X99,0X92,0X82,0XF8,0X80,0X90};
volatile unsigned int t;

unsigned int read_adc()
{
	ADMUX = 0|(1<<REFS0)|(1<<REFS1)|(1<<ADLAR); //Chọn kênh 0 và điện áp tham chiếu AVCC,hiệuu chỉnh trái kq chuyển đổi
	ADCSRA |= (1<<ADSC);	//Khởi động ADC
	while(!(ADCSRA&(1<<ADIF)));	//Kiểm tra quá trình chuyển đổi
	return ADCH;
}
void hienthi(unsigned int x)
{
	int ch,dv;
	dv = x%10;	//chia lấy dư
	ch = x/10;	//chia lấy nguyên
	// hàm quét led
	PORTD = (1<<2);
	PORTC = a[ch];
	_delay_ms(2);
	PORTD = 0x00;
	PORTD = (1<<3);
	PORTC = a[dv];
	_delay_ms(2);
	PORTD = 0x00;

}

int main(void)
{
	DDRC = 0xFF;
	DDRD = 0xFF;
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS0);	//cho phép ADC được sử dụng và hệ số chia xung nhịp 32
	ADMUX = (1<<REFS0)|(1<<REFS1);	//chọn kiểu điện áp tham chiếu AVCC
	
	while (1)
	{
		t =  (read_adc());
		hienthi(t);
	}
}

